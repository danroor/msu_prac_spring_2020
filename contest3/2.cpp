/*

Напишите функцию process, которая принимает два параметра:

вектор 64-битных знаковых целых чисел;
64-битное знаковое число (порог);
Функция должна добавить в конец вектора в обратном порядке те элементы вектора,
значение которых не менее чем пороговое.

Для работы с векторами использовать только итераторы или range-based for loop.
Временные векторы или другие контейнеры использовать запрещено.

Например, если на вход передан вектор { 1, 4, 3, 2 } и пороговое значение 3
после выполнения функции вектор должен быть равен { 1, 4, 3, 2, 3, 4 }.

*/


#include <vector>

void
process(std::vector <long long> &v, long long threshold) {
    unsigned int cnt = 0;
    auto beg = v.rend();

    for (auto i = v.rbegin(); i != beg; ++i) {
        if (*i >= threshold) {
            ++cnt;
        }
    }

    if (cnt == 0) {
        return;
    }

    v.reserve(v.size() + cnt);
    beg = v.rend();

    for (auto i = v.rbegin(); i != beg; ++i) {
        if (*i >= threshold) {
            v.push_back(*i);
        }
    }
}
