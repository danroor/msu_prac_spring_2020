/*

Напишите функцию process, которая принимает три параметра:

неизменяемый вектор 64-битных беззнаковых целых чисел;
вектор 64-битных беззнаковых целых чисел;
целый положительный параметр: шаг по первому вектору.
Функция проходит элементы первого вектора целых чисел с заданным шагом
и прибавляет их в последовательные элементы второго вектора,
        считая от конца вектора с шагом 1. Размер второго вектора не изменяется,
если размер второго вектора недостаточен, лишние элементы игнорируются.

Для работы с векторами использовать только итераторы или range-based for loop.

Например, если в качестве первого параметра передан вектор { 1, 2, 3, 4 },
в качестве второго параметра - вектор { 1, 2, 3 }, и третий параметр равен 2,
то после выполнения функции process второй вектор должен быть равен { 1, 5, 4 }.

*/

#include <vector>

void
process(const std::vector <unsigned long long> &v1, std::vector <unsigned long long> &v2, unsigned int step) {
    
    auto end1 = v1.end();
    auto begin2 = v2.rend();
    auto j = v2.rbegin();
    if (j == begin2) {
        return; 
    }

    auto i = v1.begin();
    while (i != end1) {
        *j += *i;
        ++j;

        for (unsigned int k = 0; k < step; ++k) {
            ++i;
            if (i == end1) {
                j = begin2;
                break;
            }
        }

        if (j == begin2) {
            break;
        }   
    }
}
